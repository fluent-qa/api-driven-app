/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.fluentqa.todo.api;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-11-14T16:29:29.158062+08:00[Asia/Shanghai]")
@Validated
@Tag(name = "healthy", description = "Tag for internal healthcheck routes")
public interface HealthyApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /healthy : Get the healthiness of the service
     *
     * @return Service is healthy (status code 200)
     *         or Service isn&#39;t healthy (status code 503)
     */
    @Operation(
        operationId = "isHealthy",
        summary = "Get the healthiness of the service",
        tags = { "healthcheck" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Service is healthy"),
            @ApiResponse(responseCode = "503", description = "Service isn't healthy")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/healthy"
    )
    default ResponseEntity<Void> isHealthy(
        
    ) {
        return new ResponseEntity<>(HttpStatus.OK);

    }

}
